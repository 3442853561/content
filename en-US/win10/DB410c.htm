---
layout: default
title: Setup your DragonBoard410c
permalink: /en-US/win10/DB410c.htm
lang: en-US
deviceName: DB410c
---
<h1> Set up a DragonBoard </h1>
<h2>Get your computer ready for the Windows Developer Proram for IoT, set up your DragonBoard and Build your first Windows IoT Core app.</h2>


<h2>1. Set up your PC <span class="pull-right"><a id="pc-content-toggle" onClick="hideDiv('pc-content')">Hide</a></span></h2>

<hr>
<div id="pc-content">

{% include_relative SetupPCContent.md %}

<!-- DragonBoard-Specific SetupPC Content -->

<h3> Install the DragonBoard Update Tool</h3>
<ol class="setup-content-list">
  <div class="row">
    <div class="col-md-6 col-sm-12">
      <li>Download the DragonBoard Update Tool by selecting the download link appropriate for your PC: <a href="https://developer.qualcomm.com/download/db410c/windows-10-iot-update-tool-dragonboard-410c-x86.zip">x86</a> or <a href="https://developer.qualcomm.com/download/db410c/windows-10-iot-update-tool-dragonboard-410c-x64.zip">x64</a></li>
    </div>
    <div class="col-md-6 col-sm-12">
    </div>
  </div>
  <div class="row">
    <div class="col-md-6 col-sm-12">
      <li>Right click on the downloaded zip file and select extract all. This will create a new folder with the same name as the downloaded zip file.</li>
    </div>
    <div class="col-md-6 col-sm-12">
    </div>
  </div>
  <div class="row">
    <div class="col-md-6 col-sm-12">
      <li>Open the folder and double click the setup.exe file.</li>
    </div>
    <div class="col-md-6 col-sm-12">
    </div>
  </div>
  <div class="row">
    <div class="col-md-6 col-sm-12">
      <li>Follow the instructions and when prompted allow the USB driver to install by clicking “install”.</li>
    </div>
    <div class="col-md-6 col-sm-12">
      <img class="image-border" src="{{site.baseurl}}/images/SetupDB410c/DB410c_UpdateTool_DriverInstall.png">
    </div>
  </div>
  <div class="row">
    <div class="col-md-6 col-sm-12">
      <li>The installer will create a shortcut to the DragonBoard Update Tool on your desktop and in your start menu, under Qualcomm->DragonBoardUpdate Tool.</li>
    </div>
    <div class="col-md-6 col-sm-12">
    </div>
  </div>
</ol>

<h3> Download the DragonBoard Windiws 10 IoT Core Image</h3>
<ol class="setup-content-list">
  <div class="row">
    <div class="col-md-6 col-sm-12">
      <li>Download a Windows 10 IoT Core image from our<a href="http://ms-iot.github.io/content/en-US/Downloads.htm" target="_blank"> downloads page </a>.</li>
    </div>
    <div class="col-md-6 col-sm-12">
    </div>
  </div>
  <div class="row">
    <div class="col-md-6 col-sm-12">
      <li>Double click the downloaded ISO file. This will automatically mount the ISO as a new virtual CD-drive. (Look for a new CD-ROM drive)</li>
    </div>
    <div class="col-md-6 col-sm-12">
    </div>
  </div>
  <div class="row">
    <div class="col-md-6 col-sm-12">
      <li>
        <p>The mounted virtual drive contains an installer file “Windows_10_IoT_Core_QCDB410C.msi”. Double click the file to start the installation.</p>
        <p>The installer creates a new directory: C:\Program Files (x86)\Microsoft IoT\FFU\QCDB410C\ which contains the DragonBoard410c image file “flash.ffu”.</p>
        <p>Unlike Raspberry Pi 2 and Minnowboard Max, we will not be applying this FFU to an SD card. Instead, we will use this flash file on the next page.</p>
      </li>
    </div>
    <div class="col-md-6 col-sm-12">
      <p><img class="image-border" src="{{site.baseurl}}/images/SetupDB410c/DB410c_WindowsInstaller.JPG"></p>
      <p><img class="image-border" src="{{site.baseurl}}/images/SetupDB410c/DB410c_FlashFile_FFU.JPG"></p>
    </div>
  </div>
  <div class="row">
    <div class="col-md-6 col-sm-12">
      <li>Eject the virtual CD-drive when done.</li>
    </div>
    <div class="col-md-6 col-sm-12">
    </div>
  </div>
</ol>
</div>

<h2>2. Set up your DragonBoard <span class="pull-right"><a id="setup-content-toggle" onClick="hideDiv('setup-content')">Hide</a></span></h2>
<hr>
<div id="setup-content">
  {% include_relative SetupDB410c.htm %}
</div>

<h2>3. Write your first app: Hello, Blinky!   <span class="pull-right"><a id="app-content-toggle" onClick="hideDiv('app-content')">Hide</a></span>  </h2>
<hr>
  <div id="app-content" class="setup-content-list">
  <div class="row">
    <div class="col-md-6 col-sm-12">
        <p>In this tutorial, we'll create a simple LED blinking app and connect a LED to your Windows 10 IoT Core device.</p>
        <p>This is a headed sample.  To better understand what headed mode is and how to configure your device to be headed, follow the instructions <a href="{{site.baseurl}}/{{page.lang}}/win10/HeadlessMode.htm"> here.</a></p>
        <p>Also, be aware that the GPIO APIs are only available on Windows 10 IoT Core, so this sample cannot run on your desktop.</p>
      <h3>Load the project in Visual Studio</h3>
        <p>You can find the source code for this sample by downloading a zip of all of our samples <a href="https://github.com/ms-iot/samples/archive/develop.zip" target="_blank">here</a> and navigating to the <code>samples-develop\Blinky</code>.  The sample code is available in either C++ or C#, however the documentation here only details the C# variant. Make a copy of the folder on your disk and open the project from Visual Studio.</p>
      <h3>Connect the LED to your Windows IoT device</h3>
        <p>You'll need a few components:</p>
        <p>A 330 &#x2126; resistor</p>
        <p>A breadboard and a couple of connector wires</p>
        <p>An LED (any color you like)</p>
    </div>
    <div class="col-md-6 col-sm-12">
      <img src="{{site.baseurl}}/images/Blinky/components.png">
    </div>
  </div>
    {% include_relative samples/BlinkyDBGpio.md %}
    {% include_relative samples/AppDeploymentCS.md %}
  <div class="row">
    <div class="col-md-6 col-sm-12">
      <p>When everything is set up, you should be able to press F5 from Visual Studio.  If there are any missing packages that you did not install during setup, Visual Studio may prompt you to acquire those now.  The Blinky app will deploy and start on the Windows IoT device, and you should see the LED blink in sync with the simulation on the screen.</p>
    </div>
    <div class="col-md-6 col-sm-12">
      <img src="{{site.baseurl}}/images/Blinky/blinky-screenshot.png" height="400">
    </div>
  </div>
  <p>Congratulations! You controlled one of the GPIO pins on your Windows IoT device.</p>
  {% include_relative samples/BlinkyCodeCS.md%}
</div>


<script>
  function hideDiv(div) {
    var div = "#" + div;
    var button = div + "-toggle"
    $(div).toggle('slow');
    var currentState = $(button)[0].innerHTML;
    $(button)[0].innerHTML = currentState === "Hide" ? "Show" : "Hide"
  }
</script>

