---
layout: default
title: Setup your Raspberry Pi 2
permalink: /en-US/win10/SetupRPI.htm
lang: en-US
deviceName: RPI2
---

<h1> Set up a Raspberry Pi 2 </h1>

<h2>Get your computer ready for the Windows Developer Proram for IoT, set up your Raspberry Pi 2 and Build your first Windows IoT Core app.</h2>


<h2>1. Set up your PC <span class="pull-right"><a id="pc-content-toggle" onClick="hideDiv('pc-content')">Hide</a></span></h2>

<hr>
<div id="pc-content">
{% include_relative SetupPCContent.md %}
</div>

<h2>2. Set up your Raspberry Pi 2 <span class="pull-right"><a id="setup-content-toggle" onClick="hideDiv('setup-content')">Hide</a></span></h2>
<hr>
<div id="setup-content">
<h4> What you need </h4>
    A PC running Windows 10 - as prepared in the previous step.<br>
    Raspberry Pi 2<br>
    5v Micro USB power supply with at least 1.0A current.  If you plan on using several power-hungry USB peripherals, use a higher current power supply instead (>2.0A).<br>
    8GB Micro SD card - class 10 or better. We suggest this <a href="http://www.amazon.com/gp/product/B00IVPU786" target="_blank">one</a> or this <a href="http://www.amazon.com/SanDisk-Ultra-Micro-SDHC-16GB/dp/9966573445" target="_blank">one</a>.<br>
    HDMI cable and monitor<br>
    Ethernet Cable<br>
    Micro SD card reader - due to an issue with most internal SD card readers, we suggest an external USB card reader like this <a href="http://www.amazon.com/gp/product/B00IVPU786" target="_blank">one</a> or this <a href="http://www.amazon.com/SanDisk-Ultra-Micro-SDHC-16GB/dp/9966573445" target="_blank"> one</a><br>
<h3> Install the Windows 10 IoT Core tools </h3>
  <ol class="setup-content-list">
    <div class="row">
      <div class="col-md-6 col-sm-12">
        <li>
          Download a Windows 10 IoT Core image from our <a href="http://ms-iot.github.io/content/en-US/Downloads.htm" target="_blank">downloads page</a>. Save the ISO to a local folder.
        </li>
      </div>
      <div class="col-md-6 col-sm-12">
        <img class="image-border" src="{{site.baseurl}}/images/SetupRPI/Iso.PNG">

      </div>
    </div>
    <div class="row">
      <div class="col-md-6 col-sm-12">
        <li>
          Double click on the ISO (Iot Core RPi.iso). It will automatically mount itself as a virtual drive so you can access the contents.
        </li>
      </div>
      <div class="col-md-6 col-sm-12">
        <img class="image-border" src="{{site.baseurl}}/images/SetupRPI/MSI.PNG">
      </div>
    </div>
    <div class="row">
      <div class="col-md-6 col-sm-12">
        <li>
          Install Windows_10_IoT_Core_RPi2.msi. When installation is complete, flash.ffu will be located at C:\Program Files (x86)\Microsoft IoT\FFU\RaspberryPi2.
        </li>
      </div>
      <div class="col-md-6 col-sm-12">
        <img class="image-border" src="{{site.baseurl}}/images/SetupRPI/rpiffu.PNG">
      </div>
    </div>
    <div class="row">
      <div class="col-md-6 col-sm-12">
        <li>
          Eject the Virtual CD when installation is complete - this can be done by navigating to the top folder of File Explorer, right clicking on the virtual drive, and selecting "Eject".
        </li>
      </div>
    </div>
  </ol>

<h3> Put the Windows 10 IoT Core image on your SD card </h3>
  <ol class="setup-content-list">
    <div class="row">
      <div class="col-md-6 col-sm-12">
        <li>
          Insert a Micro SD Card into your SD card reader.
        </li>
      </div>
      <div class="col-md-6 col-sm-12">
      </div>
    </div>
    <div class="row">
      <div class="col-md-6 col-sm-12">
        <li>
           Use IoTCoreImageHelper.exe to flash the SD card. Search for "WindowsIoT" from start menu and select the shortcut "WindowsIoTImageHelper".
        </li>
      </div>
      <div class="col-md-6 col-sm-12">
        <img src="{{site.baseurl}}/images/ImagerHelperSearch.PNG">
      </div>
    </div>
    <div class="row">
      <div class="col-md-6 col-sm-12">
        <li>
          <p>The tool will enumerate devices as shown. Select the SD card you want to flash, and then provide the location of the ffu to flash the image.</p>
          <p><b>NOTE:</b> IoTCoreImageHelper.exe is the recommended tool to flash the SD card. However, instructions are available for using <a href="{{site.baseurl}}/{{page.lang}}/win10/samples/DISM.htm" target="_blank">DISM command line tool</a> directly.</p>
        </li>
      </div>
      <div class="col-md-6 col-sm-12">
        <img src="{{site.baseurl}}/images/SetupRPI/ImageHelper.PNG">
      </div>
    </div>
    <div class="row">
      <div class="col-md-6 col-sm-12">
        <li>
          <p>Safely remove your USB SD card reader by clicking on "Safely Remove Hardware" in your task tray, or by finding the USB device in File Explorer, right clicking, and choosing "Eject".  Failing to do this can cause corruption of the image.</p>
          <p><b>NOTE:</b> If you want to remove Windows 10 IoT Core from your SD card after you are done using it, see the <a href="{{site.baseurl}}/{{page.lang}}/Faqs.htm" target="_blank"> FAQ </a> section titled "How do I remove Windows 10 IoT Core from my SD card?".</p>
        </li>
      </div>
      <div class="col-md-6 col-sm-12">
      </div>
    </div>
  </ol>
<h3> Hook up your board </h3>
<div class="setup-content-list">
  <div class="row">
    <div class="col-md-6 col-sm-12">
      <ol class="setup-content-list">
        <li>Insert the micro SD card you prepared into your Raspberry Pi 2 (the slot is indicated by arrow #1 in the image below).</li>
        <li>
          <p>Connect a network cable from your local network to the Ethernet port on the board. Make sure your development PC is on the same network.</p>
          <p><b>NOTE:</b> If you don't have a local wired network, see [here]({{site.baseurl}}/{{page.lang}}/win10/ConnectToDevice.htm) for additional connection options.</p>
        </li>
        <li> Connect an HDMI monitor to the HDMI port on the board.</li>
        <li>Connect the power supply to the micro USB port on the board.</li>
      </ol>
    </div>
    <div class="col-md-6 col-sm-12">
      <img class="device-images" src="{{site.baseurl}}/images/rpi2.png">
    </div>
  </div>
</div>
<h3>Boot Windows 10 IoT Core</h3>
<ol class="setup-content-list">
  <div class="row">
    <div class="col-md-6 col-sm-12">
      <li>
        Windows 10 IoT Core will boot automatically after connecting the power supply. This process will take a few minutes.  After seeing the Windows logo, your screen may go black for about a minute - don't worry, this is normal for boot up.  You may also see a screen prompting you to choose a language for your Windows 10 IoT Core device - either connect a mouse and choose your option, or wait about a 1-2 minutes for the screen to disappear.
      </li>
    </div>
  </div>
  <div class="row">
    <div class="col-md-6 col-sm-12">
      <li>Once the device has booted, the DefaultApp will launch and display the IP address of your RPi2.
      </li>
    </div>
    <div class="col-md-6 col-sm-12">
      <img class="device-images" src="{{site.baseurl}}/images/DefaultAppRpi2.png">
    </div>
  </div>
  <div class="row">
    <div class="col-md-6 col-sm-12">
      <li>
        Follow the PowerShell documentation<a href="{{site.baseurl}}/{{page.lang}}/win10/samples/PowerShell.htm" target="_blank"> here</a> to use PowerShell to connect to your running device.  You can also follow the instructions <a href="{{site.baseurl}}/{{page.lang}}/win10/samples/SSH.htm" target="_blank">here</a> to use SSH to connect to your device.
      </li>
    </div>
  </div>
  <div class="row">
    <div class="col-md-6 col-sm-12">
      <li>
        It is highly recommended that you update the default password for the Administrator account. To do this, issue the following commands in your PowerShell connection:

      Replace <code>[new password]</code> with a strong password:

          net user Administrator [new password]

      Once this is done, you'll need to re-establish the current session using enable-psSession with the new credentials.
      </li>
    </div>
  </div>
</ol>
<h3> Additional Resources </h3>
<p><a href="{{site.baseurl}}/{{page.lang}}/win10/SupportedInterfaces.htm" target="_blank">Supported Peripheral Interfaces and Devices</a></p>
</div>

<h2>3. Write your first app: Hello, Blinky!   <span class="pull-right"><a id="app-content-toggle" onClick="hideDiv('app-content')">Hide</a></span>  </h2>
<hr>
  <div id="app-content" class="setup-content-list">
  <div class="row">
    <div class="col-md-6 col-sm-12">
        <p>In this tutorial, we'll create a simple LED blinking app and connect a LED to your Windows 10 IoT Core device.</p>
        <p>This is a headed sample.  To better understand what headed mode is and how to configure your device to be headed, follow the instructions <a href="{{site.baseurl}}/{{page.lang}}/win10/HeadlessMode.htm"> here.</a></p>
        <p>Also, be aware that the GPIO APIs are only available on Windows 10 IoT Core, so this sample cannot run on your desktop.</p>
      <h3>Load the project in Visual Studio</h3>
        <p>You can find the source code for this sample by downloading a zip of all of our samples <a href="https://github.com/ms-iot/samples/archive/develop.zip" target="_blank">here</a> and navigating to the <code>samples-develop\Blinky</code>.  The sample code is available in either C++ or C#, however the documentation here only details the C# variant. Make a copy of the folder on your disk and open the project from Visual Studio.</p>
      <h3>Connect the LED to your Windows IoT device</h3>
        <p>You'll need a few components:</p>
        <p>A 220 &#x2126; resistor</p>
        <p>A breadboard and a couple of connector wires</p>
        <p>An LED (any color you like)</p>
    </div>
    <div class="col-md-6 col-sm-12">
      <img src="{{site.baseurl}}/images/Blinky/components.png">
    </div>
  </div>
    {% include_relative samples/BlinkyRPIGpio.md %}
    {% include_relative samples/AppDeploymentCS.md %}
  <div class="row">
    <div class="col-md-6 col-sm-12">
      <p>When everything is set up, you should be able to press F5 from Visual Studio.  If there are any missing packages that you did not install during setup, Visual Studio may prompt you to acquire those now.  The Blinky app will deploy and start on the Windows IoT device, and you should see the LED blink in sync with the simulation on the screen.</p>
    </div>
    <div class="col-md-6 col-sm-12">
      <img src="{{site.baseurl}}/images/Blinky/blinky-screenshot.png" height="400">
    </div>
  </div>
  <p>Congratulations! You controlled one of the GPIO pins on your Windows IoT device.</p>

  {% include_relative samples/BlinkyCodeCS.md%}
  </div>


<script>
  function hideDiv(div) {
    var div = "#" + div;
    var button = div + "-toggle"
    $(div).toggle('slow');
    var currentState = $(button)[0].innerHTML;
    $(button)[0].innerHTML = currentState === "Hide" ? "Show" : "Hide"
  }
</script>